#!/usr/bin/ruby
require 'rubygems'
require 'mech_farmer'
require 'ip'
require 'yaml'
include MechFarmer

def process_ip(ip)
  print "Farming ip #{ip}... "
  rh = RemoteHost.new(ip)
  if rh.farm
    puts "Ok"
  else
    puts "Failed"
    return nil
  end
  return rh
end

ip_list = ARGV

if ip_list.size == 0
  puts "Usage: #{File.basename(__FILE__)} ip1 ip2"
  exit 4
end

ip_range = []
ip_list.each do |item|
  if item =~ /.*\/\d{1,2}/
    #CIDR notation
    cidr = IP::CIDR.new(item)
    ip_range.concat cidr.range
  else
    #single host
    ip_range << IP::Address::IPv4.new(item)
  end
end

hosts = []
File.open 'mfarmer_errors.log', 'w' do |errors|
  ip_range.each do |ip|
    host = process_ip(ip.ip_address)
    if not host.nil?
      hosts << host
    else
      errors.puts "#{ip}, host alive: #{host.alive?}"
    end
  end
end

puts "Writing db file..."
inv = Inventory.new
hosts.each do |h|
  inv.add_item h.to_hash
end
inv.write
